---
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<nav class="sticky top-0 mb-8 bg-white shadow-md">
  <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
    <div class="relative flex h-16 items-center justify-between">
      <div class="absolute inset-y-0 left-0 flex items-center sm:hidden">
        <!-- Mobile menu button-->
        <button
          type="button"
          class="relative inline-flex items-center justify-center rounded-md p-2 text-primary focus:outline-2 focus:-outline-offset-1"
          aria-label="Open main menu"
          aria-expanded="false"
        >
          <svg
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
            data-slot="icon"
            aria-hidden="true"
            class="size-6 in-aria-expanded:hidden"
          >
            <path
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
          <svg
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
            data-slot="icon"
            aria-hidden="true"
            class="size-6 not-in-aria-expanded:hidden"
          >
            <path
              d="M6 18 18 6M6 6l12 12"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
        </button>
      </div>
      <div
        class="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start"
      >
        <div class="flex shrink-0 items-center">
          <h1 class="text-4xl font-bold">
            <a href={getRelativeLocaleUrl(lang)} class="text-primary">
              <span class="hidden sm:block md:hidden">PV</span>
              <span class="sm:hidden md:block">PatricksVilla</span>
            </a>
          </h1>
        </div>
        <div class="hidden sm:ml-6 sm:block">
          <div class="flex items-center space-x-4">
            <a
              href={getRelativeLocaleUrl(lang, "availability")}
              class={`px-5 py-2 rounded-full border-2 border-primary text-primary font-semibold hover:bg-primary hover:text-white transition-colors ${
                Astro.url.pathname.endsWith("/availability/") &&
                "bg-primary text-white"
              }`}
            >
              {t("nav.availability")}
            </a>
            <a
              href={getRelativeLocaleUrl(lang, "contact")}
              class={`px-5 py-2 rounded-full border-2 border-primary text-primary font-semibold hover:bg-primary hover:text-white transition-colors ${
                Astro.url.pathname.endsWith("/contact/") &&
                "bg-primary text-white"
              }`}
            >
              {t("nav.contact")}
            </a>
            <a
              href={getRelativeLocaleUrl(lang, "guestbook")}
              class={`px-5 py-2 rounded-full border-2 border-primary text-primary font-semibold hover:bg-primary hover:text-white transition-colors ${
                Astro.url.pathname.endsWith("/guestbook/") &&
                "bg-primary text-white"
              }`}
            >
              {t("nav.guestbook")}
            </a>
          </div>
        </div>
      </div>
      <div
        class="absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0"
      >
        <a
          href={getRelativeLocaleUrl(
            lang === "en" ? "de" : "en",
            Astro.url.pathname.replace(/^\/[^/]+/, "")
          )}
          class="px-5 py-2 rounded-full border-2 border-primary text-primary font-semibold hover:bg-primary hover:text-white"
          aria-label=`${lang === "en" ? "Switch to German" : "Switch to English"}`
        >
          {lang === "en" ? "ðŸ‡ºðŸ‡¸" : "ðŸ‡©ðŸ‡ª"}
        </a>
      </div>
    </div>
  </div>

  <div id="mobile-menu" hidden class="block sm:hidden">
    <div class="space-y-1 px-2 pt-2 pb-3">
      <a
        href={getRelativeLocaleUrl(lang, "availability")}
        class=`block rounded-md px-3 py-2 text-primary hover:bg-primary hover:text-white hover:transition-colors ${
          Astro.url.pathname.endsWith("/availability/") &&
          "bg-primary text-white"
        }`
        >{t("nav.availability")}</a
      >
      <a
        href={getRelativeLocaleUrl(lang, "contact")}
        class=`block rounded-md px-3 py-2 text-primary hover:bg-primary hover:text-white hover:transition-colors ${
          Astro.url.pathname.endsWith("/contact/") &&
          "bg-primary text-white"
        }`
        >{t("nav.contact")}</a
      >
      <a
        href={getRelativeLocaleUrl(lang, "guestbook")}
        class=`block rounded-md px-3 py-2 text-primary hover:bg-primary hover:text-white hover:transition-colors ${
          Astro.url.pathname.endsWith("/guestbook/") &&
          "bg-primary text-white"
        }`
        >{t("nav.guestbook")}</a
      >
    </div>
  </div>
</nav>

<script>
  // Get the mobile menu button and mobile menu elements
  const mobileMenuButton = document.querySelector(
    'button[aria-label="Open main menu"]'
  );
  const mobileMenu = document.getElementById("mobile-menu");

  // Add click event listener to the mobile menu button
  mobileMenuButton?.addEventListener("click", () => {
    // Toggle the hidden attribute on the mobile menu
    const isHidden = mobileMenu?.hasAttribute("hidden");

    if (isHidden) {
      mobileMenu?.removeAttribute("hidden");
      mobileMenuButton?.setAttribute("aria-expanded", "true");
    } else {
      mobileMenu?.setAttribute("hidden", "");
      mobileMenuButton?.setAttribute("aria-expanded", "false");
    }
  });
</script>
